apiVersion: v1
kind: ServiceAccount
metadata:
  name: testpmd
  namespace: openshift-sro
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: testpmd
  namespace: openshift-sro
rules:
- apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  verbs:
  - use
  resourceNames:
  - privileged
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: testpmd
  namespace: openshift-sro
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: testpmd
  namespace: openshift-sro
subjects:
- kind: ServiceAccount
  name: testpmd
  namespace: openshift-sro
userNames:
- system:serviceaccount:openshift-sro:testpmd
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: testpmd-entrypoint
  namespace: openshift-sro
data:
  entrypoint.sh: |-
    #!/bin/bash
    #cd /root
    #./insmod.sh
    echo 6 > /sys/devices/system/node/node0/hugepages/hugepages-1048576kB/nr_hugepages 
    echo 6 > /sys/devices/system/node/node1/hugepages/hugepages-1048576kB/nr_hugepages 
    ln -s /usr/bin/python36 /usr/bin/python
    sed -i 's/sudo//g' /work/usertools/dpdk-setup.sh

    sleep infinity
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: testpmd-daemonset
  name: testpmd-daemonset
  namespace: openshift-sro
  annotations:
    openshift.io/scc: testpmd
    callback: testpmd-daemonset
spec:
  selector:
    matchLabels:
      app: testpmd-daemonset
  template:
    metadata:
      # Mark this pod as a critical add-on; when enabled, the critical add-on scheduler
      # reserves resources for critical add-on pods so that they can be rescheduled after
      # a failure.  This annotation works in tandem with the toleration below.
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        app: testpmd-daemonset
    spec:
      tolerations:
      - operator: Exists
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      serviceAccount: testpmd
      serviceAccountName: testpmd
#      hostPID: true
      hostNetwork: true
#      hostIPC: true
#      hostPorts: true
      containers:
      - image: quay.io/openshift-psap/testpmd
        imagePullPolicy: Always
        name: testpmd-ctr
        command: ["/bin/entrypoint.sh"]
        securityContext:
          privileged: true
        volumeMounts:
#        - name: hugepage
#          mountPath: /dev/hugepages
        - name: entrypoint
          mountPath: /bin/entrypoint.sh
          readOnly: true
          subPath: entrypoint.sh
#        - name: devices
#          mountPath: /dev
#        - name: proc
#          mountPath: /proc
#        - name: sys
#         mountPath: /sys
        - name: modules
          mountPath: /host/lib/modules
      volumes:
 #     - name: hugepage
 #       emptyDir:
 #         medium: HugePages
 #     - name: devices
 #       hostPath: 
 #        path: /dev
 #     - name: proc
 #       hostPath: 
 #         path: /proc
 #     - name: sys
 #       hostPath: 
 #         path: /sys
      - name: modules
        hostPath:
          path: /lib/modules
      - name: entrypoint
        configMap:
          defaultMode: 0700
          name: testpmd-entrypoint
      nodeSelector:
        node-role.kubernetes.io/worker: ""
        feature.node.kubernetes.io/pci-10de.present: "true"

